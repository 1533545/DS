@startuml

skinparam linetype ortho

/' Back End '/
package "kernel" #DDDDDD {

  Abstract Component {
      - {static} logger: Logger
      #fatherNode : Component
      #tags : List<String>
      #name : String
      #description: String
      #startTime: LocalDateTime
      #finishTime: LocalDateTime
      #toJson() : JSONObject
      #print(indentation : int) : void
      -generateTagsFromJson((jsonArray :JSONArray) : List<String>
      #toJsonComponent(jsonObject: JSONObject) : JSONObject
      -tagsTojson() : JSONArray
      +updateStartTime(time : LocalDateTime) : void
      +updateFinishTime(time : LocalDateTime) : void
      +acceptVisitor(visitor : Visitor) : void
      -tagsToLowercase(tags : List<String>): List<String>
      +printComponentTimes(): void
  }

  class Project {
     - {static} logger: Logger
     -children: List<Component>
     +addComponent(Component : ProjectComponent) : void
     +toJson(): JSONObject
     +RemoveComponent(id : String) : boolean
     -generateChildrenFromJson(jsonArray :JSONArray) : void
     -generateTaskFromJson(childJson : JSONObject) : void
     -generateProjectFromJson(childJson : JSONObject) : void
     -childrenToJson() : JSONArray
     -invariant(): boolean
     +acceptVisitor(visitor : Visitor): void
  }

  class Task {
    - {static} logger: Logger
    -intervals: List<Interval>
    -runningInterval : Interval
    +addInterval(interval : Interval) : void
    +startTask() : void
    +finishTask() : void
    -intervalsToJson(): JSONArray
    -loadIntervalsFromJson(jsonArray :JSONArray) : void
    -startObservingClock() : void
    -stopObservingClock() : void
    -invariant(): boolean
    +acceptVisitor(visitor : Visitor): void
    +printTimes(): void
    +toJson(): JSONObject
    +addInterval(interval : Interval): void
  }

  class Interval {
    - {static} logger: Logger
    -start : LocalDateTime
    -end : LocalDateTime
    -fatherTask : Task
    +toJson():JSONObject
    +update(obs : Observable, arg : Object)
    -printTimes(): void
    -printIntervalTimes(): void
  }

  class Clock{
  - {static} logger: Logger
  -timer: Timer
  -clock: Clock
  -cancelTimer: boolean
  +startClock() : void
  +stopClock() : void
  -tick() : void
  -stopTimer() : void
  }

}

package "java.util" #DDDDDD{
  abstract Observable {
    +AddObserver(o:Observer) : void
    +DeleteObserver(o:Observer) : void
    +DeleteObservers() : void
    +HasChanged() : bool
    #ClearChanged() : void
    +NotifyObservers(arg:object) : void
  }
  interface Observer
  {
       +void Update(observable : Observable, arg: object )
  }
  Observable "0..N" *--> "1" Observer:ObserverList
}

package "visitor" #DDDDDD {
  interface Visitor{
    visitProject(project:Project) : void
    visitTask(task: Task) :void
  }

  class TagExplorer{
    - {static} logger: Logger
    -targetTag: String
    -componentsFound: List<Component>
    +cleanTargetTag(): void
    +search((project:Project): List<Component>
    +visitProject(project:Project) : void
    +visitTask(task: Task) :void
  }

  class Printer{
    - {static} logger: Logger
    -indentation : int
    -generateCustomIndentation(): String
    -generateCustomTagListString(tagList: List<String>)
    +print(component: Component): void
    +visitProject(project:Project) : void
    +visitTask(task: Task) :void
  }

  class NameExplorer{
    - {static} logger: Logger
    ~targetName: String
    ~componentFound: Component
    +search(project: Project): void
    +visitProject(project:Project) : void
    +visitTask(task: Task) :void
  }
}

package json #DDDDDD {
  class JsonReader {
    - {static} logger: Logger
    + {static} readJson(fileName : String) : JSONObject
    - {static} readJsonFile(fileName : String) : String
    - {static} readFile(file : File) : String
  }

  class JsonWriter {
    - {static} logger: Logger
    + {static} saveJson(json:JSONObject) : void
    + {static} saveJsonPrettier(json:JSONObject) : void
    - writeJson(text : String, fileName : String)
  }
}

/' Relationship '/
  NameExplorer -left-|> Visitor
  Printer -up-|> Visitor
  TagExplorer -right-|> Visitor
  Component <|-down- Project
  Component <|-right- Task
  Component "N" --o "1" Project : Children
  Task "1" o-- "0..N" Interval
  Interval .left.|> Observer
  Clock -down-|> Observable

@enduml
