@startuml

skinparam linetype ortho

/' Tests '/
/' package "Testing" #DDDDDD {
      class MainTests {
      }
      Abstract IProject {
      }
      class ProjectTests {
      }
      class TaskTests {
      }
} '/


/' Back End '/
package "Kernel" #DDDDDD {
  class Main {
    +{static}main()
  }

  Abstract ProjectComponent {
      -_id : String
      -_fatherTree : ProjectComponent
      -_durationTime : DateTime
      -_startTime : DateTime
      -_finishTime : DateTime
      -_name : String
      --
  }

  /'note top of ProjectComponent: StartCounting() -> Instantiate attributes'/



  class ProjectComposite {
     -void removeTask(projectOrTask : IProject)
     -void addTask(projectOrTask : IProject)
     -bool isFinished()
  }

  class Task {
    -startTime: DateTime
    -finishTime: DateTime
  }

  class Time {
    -_timer : Timer
    -_dateTime : DateTime

    -tick()
    +startTimer()
    +stopTimer()
  }

  package "java.util" {
  abstract ObservableTime {
    +void addTimeObserver(ob:TimeObserver)
    +void deleteTimeObserver(ob:TimeObserver)
    +void setChanged()
    +TimeObserver notifyTimeObsever(arg0:ObservableTime,arg1:Object)
  }
  interface TimeObserver {
       +void updateTime()
       +void startCounting()
    }
  }



  note top of ProjectComponent: tree type

}

/' Relationship '/
  Task "many" --|> "1..     " ProjectComponent
  ProjectComponent "1..    " <|-- "many  " ProjectComposite
  ProjectComponent --o ProjectComposite : Children

  Time --|> ObservableTime
  ObservableTime o--> TimeObserver: "observers*"
  ProjectComponent -up-|> TimeObserver
  Main -- ProjectComponent: "instantiates"

@enduml
